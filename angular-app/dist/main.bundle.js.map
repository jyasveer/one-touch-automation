{"version":3,"sources":["/Users/jgotta/training/redis-nodejs/one-touch-automation/angular-app/src/$_gendir lazy","/Users/jgotta/training/redis-nodejs/one-touch-automation/angular-app/src/app/app-routing.module.ts","/Users/jgotta/training/redis-nodejs/one-touch-automation/angular-app/src/app/app.component.css","/Users/jgotta/training/redis-nodejs/one-touch-automation/angular-app/src/app/app.component.html","/Users/jgotta/training/redis-nodejs/one-touch-automation/angular-app/src/app/app.component.ts","/Users/jgotta/training/redis-nodejs/one-touch-automation/angular-app/src/app/app.module.ts","/Users/jgotta/training/redis-nodejs/one-touch-automation/angular-app/src/app/create-vc/create-vc.component.html","/Users/jgotta/training/redis-nodejs/one-touch-automation/angular-app/src/app/create-vc/create-vc.component.scss","/Users/jgotta/training/redis-nodejs/one-touch-automation/angular-app/src/app/create-vc/create-vc.component.ts","/Users/jgotta/training/redis-nodejs/one-touch-automation/angular-app/src/app/create-vc/create-vc.module.ts","/Users/jgotta/training/redis-nodejs/one-touch-automation/angular-app/src/app/create-vm/create-vm.component.html","/Users/jgotta/training/redis-nodejs/one-touch-automation/angular-app/src/app/create-vm/create-vm.component.scss","/Users/jgotta/training/redis-nodejs/one-touch-automation/angular-app/src/app/create-vm/create-vm.component.ts","/Users/jgotta/training/redis-nodejs/one-touch-automation/angular-app/src/app/create-vm/create-vm.module.ts","/Users/jgotta/training/redis-nodejs/one-touch-automation/angular-app/src/app/delete-vm/delete-vm.component.html","/Users/jgotta/training/redis-nodejs/one-touch-automation/angular-app/src/app/delete-vm/delete-vm.component.scss","/Users/jgotta/training/redis-nodejs/one-touch-automation/angular-app/src/app/delete-vm/delete-vm.component.ts","/Users/jgotta/training/redis-nodejs/one-touch-automation/angular-app/src/app/delete-vm/delete-vm.module.ts","/Users/jgotta/training/redis-nodejs/one-touch-automation/angular-app/src/app/header/header.component.html","/Users/jgotta/training/redis-nodejs/one-touch-automation/angular-app/src/app/header/header.component.ts","/Users/jgotta/training/redis-nodejs/one-touch-automation/angular-app/src/app/header/header.module.ts","/Users/jgotta/training/redis-nodejs/one-touch-automation/angular-app/src/app/home/home.component.html","/Users/jgotta/training/redis-nodejs/one-touch-automation/angular-app/src/app/home/home.component.ts","/Users/jgotta/training/redis-nodejs/one-touch-automation/angular-app/src/app/home/home.module.ts","/Users/jgotta/training/redis-nodejs/one-touch-automation/angular-app/src/app/login/login.component.html","/Users/jgotta/training/redis-nodejs/one-touch-automation/angular-app/src/app/login/login.component.scss","/Users/jgotta/training/redis-nodejs/one-touch-automation/angular-app/src/app/login/login.component.ts","/Users/jgotta/training/redis-nodejs/one-touch-automation/angular-app/src/app/login/login.module.ts","/Users/jgotta/training/redis-nodejs/one-touch-automation/angular-app/src/app/shared/app.service.ts","/Users/jgotta/training/redis-nodejs/one-touch-automation/angular-app/src/environments/environment.ts","/Users/jgotta/training/redis-nodejs/one-touch-automation/angular-app/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/jgotta/training/redis-nodejs/one-touch-automation/angular-app/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { CreateVmComponent } from './create-vm/create-vm.component';\nimport { DeleteVmComponent } from './delete-vm/delete-vm.component';\nimport { CreateVcComponent } from './create-vc/create-vc.component';\n\nconst appRoutes: Routes = [\n  { path: '', pathMatch: 'full', redirectTo: '/login' },\n  { path: 'login', component: LoginComponent },\n  {\n    path: 'home', component: HomeComponent, children: [\n      { path: '', component: CreateVmComponent },\n      { path: 'create-vm', component: CreateVmComponent },\n      { path: 'create-vc', component: CreateVcComponent },\n      { path: 'delete-vm', component: DeleteVmComponent }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(appRoutes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/jgotta/training/redis-nodejs/one-touch-automation/angular-app/src/app/app-routing.module.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/jgotta/training/redis-nodejs/one-touch-automation/angular-app/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<router-outlet></router-outlet>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/jgotta/training/redis-nodejs/one-touch-automation/angular-app/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  loadedFeature = 'recipe';\n\n  onNavigate(feature: string) {\n    this.loadedFeature = feature;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/jgotta/training/redis-nodejs/one-touch-automation/angular-app/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { LoginModule } from './login/login.module';\nimport { HomeModule } from './home/home.module';\nimport { AppService } from './shared/app.service';\nimport { CreateVmModule } from './create-vm/create-vm.module';\nimport { DeleteVmModule } from './delete-vm/delete-vm.module';\nimport { CreateVcModule } from './create-vc/create-vc.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpModule,\n    AppRoutingModule,\n    HomeModule,\n    LoginModule,\n    CreateVmModule,\n    DeleteVmModule,\n    CreateVcModule\n  ],\n  providers: [AppService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/jgotta/training/redis-nodejs/one-touch-automation/angular-app/src/app/app.module.ts","module.exports = \"<div class=\\\"container\\\">\\n  <alert type=\\\"success\\\" *ngIf=\\\"isVcAdded\\\">\\n    <strong>New VC <b>{{ newVcName }}</b> added successfully.</strong>\\n  </alert>\\n  <alert type=\\\"danger\\\" *ngIf=\\\"isVcAddError\\\">\\n    <strong>Error in adding VC.</strong>\\n  </alert>\\n  <div class=\\\"col-sm-6\\\">\\n    <form class=\\\"form-horizontal\\\" role=\\\"form\\\">\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-sm-4 control-label\\\">* Region Name</label>\\n        <div class=\\\"col-sm-8\\\">\\n          <select name=\\\"select-region\\\" class=\\\"form-control\\\" required (change)=\\\"getDataForRegion()\\\" [(ngModel)]=\\\"selectedRegion\\\" *ngIf=\\\"!isPreview\\\"\\n            name=\\\"region\\\" #region=\\\"ngModel\\\">\\n            <option value=\\\"\\\">SELECT-REGION</option>\\n            <option value=\\\"bng\\\">Bangalore</option>\\n            <option value=\\\"svl\\\">Sunnyvale</option>\\n            <option value=\\\"qnc\\\">QNC</option>\\n          </select>\\n          <div *ngIf=\\\"isPreview\\\">{{ selectedRegion ? selectedRegion : '---' }}</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-sm-4 control-label\\\">New VC name:</label>\\n        <div class=\\\"col-sm-8\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"newVcName\\\" (ngModelChange)=\\\"checkIfVcNameExists()\\\" name=\\\"vc-name\\\" *ngIf=\\\"!isPreview\\\"\\n            [disabled]=\\\"selectedRegion === ''\\\">\\n          <div class=\\\"text-muted\\\" *ngIf=\\\"isVcNamePresent\\\">VC name already present. Please enter a different name</div>\\n          <div *ngIf=\\\"isPreview\\\">{{ newVcName ? newVcName : '---' }}</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"col-sm-offset-4 col-sm-8\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-default\\\" *ngIf=\\\"! isPreview\\\" (click)=\\\"isPreview = true\\\" [disabled]=\\\"isButtonDisabled\\\">Next</button>\\n        </div>\\n        <div class=\\\"col-sm-offset-4 col-sm-8\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-default\\\" *ngIf=\\\"isPreview && showSubmit\\\" (click)=\\\"createVc()\\\">Create</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-default\\\" style=\\\"margin-left: 10px\\\" *ngIf=\\\"isPreview && showSubmit\\\" (click)=\\\"isPreview = false\\\">Back</button>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/jgotta/training/redis-nodejs/one-touch-automation/angular-app/src/app/create-vc/create-vc.component.html\n// module id = ../../../../../src/app/create-vc/create-vc.component.html\n// module chunks = main","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".form-group div {\\n  margin-top: 4px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/jgotta/training/redis-nodejs/one-touch-automation/angular-app/src/app/create-vc/create-vc.component.scss\n// module id = ../../../../../src/app/create-vc/create-vc.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AppService } from '../shared/app.service';\n\n@Component({\n  selector: 'app-create-vc',\n  templateUrl: './create-vc.component.html',\n  styleUrls: ['./create-vc.component.scss']\n})\nexport class CreateVcComponent implements OnInit {\n  newVcName = '';\n  isVcNamePresent = false;\n  selectedRegion = '';\n  showSubmit = true;\n  isVcAdded = false;\n  isVcAddError = false;\n\n  private regionData: any = null;\n  private userEmail: string;\n  private vcNameArray: Array < string > = [];\n\n  constructor(\n    private router: Router,\n    private service: AppService) { }\n\n  ngOnInit() {\n    if (this.service.loggedInUser && this.service.loggedInUser.username) {\n      this.userEmail = this.service.loggedInUser.username;\n    } else {\n      this.router.navigate(['login']);\n    }\n  }\n\n  getDataForRegion() {\n    this.resetForRegion();\n    this.service.getLocationData(this.selectedRegion)\n      .subscribe((response) => {\n        let data = null;\n        if (response.json()['data']) {\n          data = JSON.parse(response.json()['data']);\n        }\n        this.regionData = data;\n        this.extractVcList();\n      }, (error: Response) => {\n        console.log('error in fetch region data', error);\n      });\n  }\n\n  checkIfVcNameExists() {\n    if (this.newVcName) {\n      this.isVcNamePresent = false;\n      if (this.regionData && (this.regionData['vcenters'] as Array<string>).indexOf(this.newVcName) !== -1) {\n        this.isVcNamePresent = true;\n      }\n    } else {\n      this.isVcNamePresent = false;\n    }\n  }\n\n  createVc() {\n    this.showSubmit = false;\n    this.isVcAdded = false;\n    this.isVcAddError = false;\n    let regionData = this.regionData;\n    if (regionData) {\n      regionData['vcenters'].push(this.newVcName);\n    } else {\n      regionData = {\n        vcenters: []\n      };\n      regionData.vcenters.push(this.newVcName);\n    }\n    const payload = JSON.stringify(regionData);\n    this.service.createVc(this.selectedRegion, payload)\n      .subscribe((response) => {\n        const data = JSON.parse(response.json()['data']['data']);\n        this.isVcAdded = true;\n        this.isVcAddError = false;\n      }, (error: Response) => {\n        console.log('error in adding vc', error);\n        this.isVcAdded = false;\n        this.isVcAddError = true;\n      });\n  }\n\n  get isButtonDisabled(): boolean {\n    return this.newVcName === '' || this.isVcNamePresent;\n  }\n\n  private extractVcList() {\n    console.log(this.regionData);\n    if (this.regionData && this.regionData['vcenters']) {\n      this.vcNameArray = this.regionData['vcenters'];\n    }\n  }\n\n  private resetForRegion() {\n    this.vcNameArray = [];\n    this.regionData = null;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/jgotta/training/redis-nodejs/one-touch-automation/angular-app/src/app/create-vc/create-vc.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { AlertModule } from 'ngx-bootstrap/alert';\n\nimport { CreateVcComponent } from './create-vc.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    AlertModule.forRoot(),\n  ],\n  declarations: [CreateVcComponent],\n  exports: [CreateVcComponent]\n})\nexport class CreateVcModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/jgotta/training/redis-nodejs/one-touch-automation/angular-app/src/app/create-vc/create-vc.module.ts","module.exports = \"<div class=\\\"container\\\">\\n    <alert type=\\\"success\\\" *ngIf=\\\"isVmCreated\\\">\\n        <strong>VM is created successfully.</strong>\\n    </alert>\\n    <alert type=\\\"info\\\" *ngIf=\\\"isVmCreating\\\">\\n        <strong>VM is being created.</strong>\\n    </alert>\\n    <alert type=\\\"danger\\\" *ngIf=\\\"isVmCreateError\\\">\\n        <strong>Error in creating VM.</strong>\\n    </alert>\\n    <div class=\\\"col-sm-6\\\">\\n        <form class=\\\"form-horizontal\\\" role=\\\"form\\\" #vmForm=\\\"ngForm\\\">\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"col-sm-4 control-label\\\">* VM Name\\n                </label>\\n                <div class=\\\"col-sm-8\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"VIRTUAL MACHINE NAME\\\" required *ngIf=\\\"!isPreview\\\" [(ngModel)]=\\\"machineName\\\"\\n                        name=\\\"vmName\\\" #vmName=\\\"ngModel\\\">\\n                    <div *ngIf=\\\"isPreview\\\">{{ machineName || '---' }}</div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"col-sm-4 control-label\\\">* OS Family</label>\\n                <div class=\\\"col-sm-8\\\">\\n                    <select name=\\\"select-vc\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"selectedOs\\\" *ngIf=\\\"!isPreview\\\"\\n                        name=\\\"osName\\\" #osName=\\\"ngModel\\\">\\n                        <option value=\\\"\\\">SELECT-OS</option>\\n                        <option *ngFor=\\\"let os of osNameArray\\\" [value]=\\\"os\\\">{{ os }}</option>\\n                    </select>\\n                    <div *ngIf=\\\"isPreview\\\">{{ selectedOs ? selectedOs : '---' }}</div>\\n                    <div class=\\\"text-muted\\\" *ngIf=\\\"!isPreview && osNameArray?.length === 0\\\">OS data not found.</div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"col-sm-4 control-label\\\">* Region Name</label>\\n                <div class=\\\"col-sm-8\\\">\\n                    <select name=\\\"select-region\\\" class=\\\"form-control\\\" required (change)=\\\"getDataForRegion()\\\" [(ngModel)]=\\\"selectedRegion\\\" *ngIf=\\\"!isPreview\\\"\\n                        name=\\\"region\\\" #region=\\\"ngModel\\\">\\n                        <option value=\\\"\\\">SELECT-REGION</option>\\n                        <option value=\\\"bng\\\">Bangalore</option>\\n                        <option value=\\\"svl\\\">Sunnyvale</option>\\n                        <option value=\\\"qnc\\\">QNC</option>\\n                    </select>\\n                    <div *ngIf=\\\"isPreview\\\">{{ selectedRegion ? selectedRegion : '---' }}</div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"col-sm-4 control-label\\\">* VC Name</label>\\n                <div class=\\\"col-sm-8\\\">\\n                    <select name=\\\"select-vc\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"selectedVc\\\" (change)=\\\"getDataCenters()\\\" *ngIf=\\\"!isPreview\\\"\\n                        name=\\\"vcName\\\" #vcName=\\\"ngModel\\\">\\n                        <option value=\\\"\\\">SELECT-VC NAME</option>\\n                        <option *ngFor=\\\"let vc of vcNameArray\\\" [value]=\\\"vc\\\">{{ vc }}</option>\\n                    </select>\\n                    <div *ngIf=\\\"isPreview\\\">{{ selectedVc ? selectedVc : '---' }}</div>\\n                    <div class=\\\"text-muted\\\" *ngIf=\\\"!isPreview && selectedRegion !== '' && vcNameArray?.length === 0\\\">VC not found for selected Region.</div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"col-sm-4 control-label\\\">* DC Name</label>\\n                <div class=\\\"col-sm-8\\\">\\n                    <select name=\\\"select-dc\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"selectedDc\\\" (change)=\\\"getBussinessUnits()\\\" *ngIf=\\\"!isPreview\\\"\\n                        name=\\\"dcName\\\" #dcName=\\\"ngModel\\\">\\n                        <option value=\\\"\\\">SELECT-DC NAME</option>\\n                        <option *ngFor=\\\"let dc of dcNameArray\\\" [value]=\\\"dc\\\">{{ dc }}</option>\\n                    </select>\\n                    <div *ngIf=\\\"isPreview\\\">{{ selectedDc ? selectedDc : '---'}}</div>\\n                    <div class=\\\"text-muted\\\" *ngIf=\\\"!isPreview && selectedVc !== '' && selectedVc !== 'create-new-vc' && dcNameArray?.length === 0\\\">DC not found for selected VC.</div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"col-sm-4 control-label\\\">* BU Name</label>\\n                <div class=\\\"col-sm-8\\\">\\n                    <select name=\\\"select-bu\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"selectedBu\\\" (change)=\\\"getClusters()\\\" *ngIf=\\\"!isPreview\\\"\\n                        name=\\\"buName\\\" #buName=\\\"ngModel\\\">\\n                        <option value=\\\"\\\">SELECT-BU NAME</option>\\n                        <option *ngFor=\\\"let bu of buNameArray\\\" [value]=\\\"bu\\\">{{ bu }}</option>\\n                    </select>\\n                    <div *ngIf=\\\"isPreview\\\">{{ selectedBu ? selectedBu : '---' }}</div>\\n                    <div class=\\\"text-muted\\\" *ngIf=\\\"!isPreview && selectedDc !== '' && buNameArray?.length === 0\\\">BU not found for selected DC.</div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"col-sm-4 control-label\\\">* Cluster Name</label>\\n                <div class=\\\"col-sm-8\\\">\\n                    <select name=\\\"select-cluster\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"selectedCluster\\\" (change)=\\\"getResourcePoolAndInterfaceTypes()\\\"\\n                        *ngIf=\\\"!isPreview\\\" name=\\\"cluster\\\" #cluster=\\\"ngModel\\\">\\n                        <option value=\\\"\\\">SELECT-CLUSTER</option>\\n                        <option *ngFor=\\\"let cluster of clusterNameArray\\\" [value]=\\\"cluster\\\">{{ cluster }}</option>\\n                    </select>\\n                    <div *ngIf=\\\"isPreview\\\">{{ selectedCluster ? selectedCluster : '---' }}</div>\\n                    <div class=\\\"text-muted\\\" *ngIf=\\\"!isPreview && selectedBu !== '' && clusterNameArray?.length === 0\\\">Cluster not found for selected BU.</div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"col-sm-4 control-label\\\">Resource Pool</label>\\n                <div class=\\\"col-sm-8\\\">\\n                    <select name=\\\"select-resource\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"selectedResourcePool\\\" *ngIf=\\\"!isPreview\\\" name=\\\"resource\\\"\\n                        #resource=\\\"ngModel\\\">\\n                        <option value=\\\"\\\">SELECT-RESOURCE</option>\\n                        <option *ngFor=\\\"let rp of resourcePoolArray\\\" [value]=\\\"rp\\\">{{ rp }}</option>\\n                    </select>\\n                    <div *ngIf=\\\"isPreview\\\">{{ selectedResourcePool ? selectedResourcePool : '---' }}</div>\\n                    <div class=\\\"text-muted\\\" *ngIf=\\\"!isPreview && selectedCluster !== '' && resourcePoolArray?.length === 0\\\">Resource Pool not found for selected Cluster.</div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"col-sm-4 control-label\\\">* Interface Type</label>\\n                <div class=\\\"col-sm-8\\\">\\n                    <select name=\\\"select-interface-type\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"selectedInterfaceType\\\" *ngIf=\\\"!isPreview\\\"\\n                        name=\\\"interfaceType\\\" #interfaceType=\\\"ngModel\\\" (change)=\\\"getInterface()\\\">\\n                        <option value=\\\"\\\">SELECT-INTERFACE-TYPE</option>\\n                        <option *ngFor=\\\"let intType of interfaceTypeArray\\\" [value]=\\\"intType\\\">{{ intType }}</option>\\n                    </select>\\n                    <div *ngIf=\\\"isPreview\\\">{{ selectedInterfaceType ? selectedInterfaceType : '---'}}</div>\\n                    <div class=\\\"text-muted\\\" *ngIf=\\\"!isPreview && selectedCluster !== '' && interfaceTypeArray?.length === 0\\\">Interface Type not found for selected Cluster.</div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"col-sm-4 control-label\\\">* Interface Details</label>\\n                <div class=\\\"col-sm-8\\\">\\n                    <select name=\\\"select-interface\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"selectedInterface\\\" *ngIf=\\\"!isPreview\\\" name=\\\"interface\\\"\\n                        #interface=\\\"ngModel\\\">\\n                        <option value=\\\"\\\">SELECT-INTERFACE</option>\\n                        <option *ngFor=\\\"let int of interfaceArray\\\" [value]=\\\"int\\\">{{ int }}</option>\\n                    </select>\\n                    <div *ngIf=\\\"isPreview\\\">{{ selectedInterface ? selectedInterface : '---'}}</div>\\n                    <div class=\\\"text-muted\\\" *ngIf=\\\"!isPreview && selectedInterfaceType !== '' && interfaceArray?.length === 0\\\">Interface not found for selected Interface type.</div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"col-sm-4 control-label\\\">Email Address </label>\\n                <div class=\\\"col-sm-8\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"EMAIL\\\" [(ngModel)]=\\\"email\\\" *ngIf=\\\"!isPreview\\\" name=\\\"emailString\\\" #emailString=\\\"ngModel\\\">\\n                    <div *ngIf=\\\"isPreview\\\">\\n                        {{ userEmail }}\\n                        <span *ngIf=\\\"email !== ''\\\">\\n                            , {{ this.email }}\\n                        </span>\\n                    </div>\\n                    <div class=\\\"text-muted\\\" *ngIf=\\\"!isPreview\\\">User's email :- {{ userEmail }}</div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"col-sm-4 control-label\\\">* INC Number </label>\\n                <div class=\\\"col-sm-8\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter INC_NUMBER\\\" [(ngModel)]=\\\"incNumber\\\" *ngIf=\\\"!isPreview\\\" name=\\\"incNumberString\\\" #incNumberString=\\\"ngModel\\\" required>\\n                    <div *ngIf=\\\"isPreview\\\">{{ incNumber ? incNumber : '---'}}</div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <div class=\\\"col-sm-offset-4 col-sm-8\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" *ngIf=\\\"! isPreview\\\" (click)=\\\"isPreview = true\\\" [disabled]=\\\"vmForm.invalid\\\">Next</button>\\n                </div>\\n                <div class=\\\"col-sm-offset-4 col-sm-8\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" *ngIf=\\\"isPreview && showSubmit\\\" (click)=\\\"onSubmit()\\\">Submit</button>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" style=\\\"margin-left: 10px\\\" *ngIf=\\\"isPreview && showSubmit\\\"\\n                        (click)=\\\"isPreview = false\\\">Back</button>\\n                </div>\\n            </div>\\n        </form>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/jgotta/training/redis-nodejs/one-touch-automation/angular-app/src/app/create-vm/create-vm.component.html\n// module id = ../../../../../src/app/create-vm/create-vm.component.html\n// module chunks = main","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".form-group div {\\n  margin-top: 4px; }\\n\\n.modal-header {\\n  padding: 10px 15px 30px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/jgotta/training/redis-nodejs/one-touch-automation/angular-app/src/app/create-vm/create-vm.component.scss\n// module id = ../../../../../src/app/create-vm/create-vm.component.scss\n// module chunks = main","import {\n    Component,\n    OnInit,\n    TemplateRef\n} from '@angular/core';\nimport {\n    Router\n} from '@angular/router';\n\nimport {\n    AppService\n} from '../shared/app.service';\nimport { VmModel } from '../shared/model/app.models';\n\n@Component({\n    selector: 'app-create-vm',\n    styleUrls: ['./create-vm.component.scss'],\n    templateUrl: './create-vm.component.html'\n})\nexport class CreateVmComponent implements OnInit {\n    machineName = '';\n    selectedOs = '';\n    selectedRegion = '';\n    selectedVc = '';\n    selectedDc = '';\n    selectedBu = '';\n    selectedCluster = '';\n    selectedResourcePool = '';\n    selectedInterfaceType = '';\n    selectedInterface = '';\n    osNameArray: Array < string > = [];\n    vcNameArray: Array < string > = [];\n    dcNameArray: Array < string > = [];\n    buNameArray: Array < string > = [];\n    clusterNameArray: Array < string > = [];\n    resourcePoolArray: Array < string > = [];\n    interfaceTypeArray: Array < string > = [];\n    interfaceArray: Array < string > = [];\n    email: string;\n    userEmail: string;\n    incNumber: string;\n    isPreview = false;\n    isVmCreating = false;\n    isVmCreated = false;\n    isVmCreateError = false;\n    showSubmit = true;\n\n    private regionData: any = null;\n    private vcData: any = null;\n    private dcData: any = null;\n    private buData: any = null;\n    private clusterData: any = null;\n    private interfaceTypeData: any = null;\n    private createVmLaunchId: string;\n    private createVmJobId: string;\n    private setIntervalReference: any;\n\n    constructor(\n        private router: Router,\n        private service: AppService) {}\n\n    ngOnInit() {\n        if (this.service.loggedInUser && this.service.loggedInUser.username) {\n            this.userEmail = this.service.loggedInUser.username;\n        } else {\n            this.router.navigate(['login']);\n        }\n        this.service.getOsData()\n        .subscribe((response) => {\n            if (response.json()['data']) {\n                const osData = JSON.parse(response.json()['data']);\n                this.osNameArray = osData['os'];\n            }\n        });\n    }\n\n    getDataForRegion() {\n        this.resetForRegion();\n        this.service.getLocationData(this.selectedRegion)\n            .subscribe((response) => {\n                let data = null;\n                if (response.json()['data']) {\n                    data = JSON.parse(response.json()['data']);\n                }\n                this.regionData = data;\n                this.extractVcList();\n            }, (error: Response) => {\n                console.log('error in fetch region data', error.json());\n            });\n    }\n\n    getDataCenters(formModalRef: TemplateRef<any>) {\n        this.resetForVC();\n        console.log(this.selectedVc);\n        this.extractDcList();\n    }\n\n    getBussinessUnits() {\n        this.resetForDC();\n        console.log(this.selectedDc);\n        this.extractBuList();\n    }\n\n    getClusters() {\n        this.resetForBU();\n        console.log(this.selectedBu);\n        this.extractClusterList();\n    }\n\n    getResourcePoolAndInterfaceTypes() {\n        this.resetForCluster();\n        console.log(this.selectedCluster);\n        this.extractResourcePoolAndInterfaceTypeList();\n    }\n\n    getInterface() {\n        this.resetForInterfaceType();\n        console.log(this.selectedInterfaceType);\n        this.extractInterfaceList();\n    }\n\n    onSubmit() {\n        this.showSubmit = false;\n        this.isVmCreated = false;\n        this.isVmCreating = true;\n        this.isVmCreateError = false;\n        this.service.getCreateVmLaunchId()\n        .subscribe((response) => {\n            if (response) {\n                const resJson = response.json();\n                const data = resJson['data'];\n                if (data) {\n                    this.createVmLaunchId = data['id'];\n                    this.createVm();\n                }\n            }\n        }, (error: Response) => {\n            console.log('error in fetching create vm launch id', error.json());\n            this.isVmCreating = false;\n            this.isVmCreated = false;\n            this.isVmCreateError = true;\n        });\n    }\n\n    createVm() {\n        let emails = '';\n        if (this.email) {\n            emails = this.userEmail + ',' + this.email;\n        } else {\n            emails = this.userEmail;\n        }\n        const vm: VmModel = {\n            osfamily: this.selectedOs,\n            vmname: this.machineName,\n            region: this.selectedRegion,\n            vc_name: this.selectedVc,\n            datacenter: this.selectedDc,\n            business_unit: this.selectedBu,\n            cluster_name: this.selectedCluster,\n            resource_pool: this.selectedResourcePool,\n            nic_type: this.selectedInterfaceType,\n            vm_nic: this.selectedInterface,\n            email_address: emails,\n            inc_number: this.incNumber\n        };\n        this.service.createVm(this.createVmLaunchId, vm)\n        .subscribe((response) => {\n            if (response) {\n                const resJson = response.json();\n                let data = resJson['data'];\n                if (data) {\n                    data = JSON.parse(data);\n                    this.createVmJobId = data['job'];\n                    this.pollForJobStatus();\n                }\n            }\n            this.isVmCreating = true;\n        }, (error: Response) => {\n            console.log('error in create vm', error.json());\n            this.isVmCreating = false;\n            this.isVmCreated = false;\n            this.isVmCreateError = true;\n        });\n    }\n\n    pollForJobStatus() {\n        // for now the interval is 10 sec\n        this.setIntervalReference = setInterval(this.getJobStatus.bind(this), 10000);\n    }\n\n    getJobStatus() {\n        this.service.getJobStatus(this.createVmJobId)\n        .subscribe((response) => {\n            if (response) {\n                const resJson = response.json();\n                const data = resJson['data'];\n                if (data) {\n                    let status: string = data['status'];\n                    if (status) {\n                        status = status.toLowerCase();\n                        if (status === 'successful') {\n                            this.isVmCreated = true;\n                            this.isVmCreating = false;\n                            this.isVmCreateError = false;\n                            this.clearIntervalReference();\n                        } else if (status === 'pending' || status === 'running') {\n                            this.isVmCreated = false;\n                            this.isVmCreating = true;\n                            this.isVmCreateError = false;\n                        } else if (status === 'failed') {\n                            this.isVmCreated = false;\n                            this.isVmCreating = false;\n                            this.isVmCreateError = true;\n                            this.clearIntervalReference();\n                        }\n                    }\n                }\n            }\n        }, (error: Response) => {\n            console.log('error in fetch job status for create vm', error.json());\n            this.isVmCreating = false;\n            this.isVmCreated = false;\n            this.isVmCreateError = true;\n        });\n    }\n\n    private resetForRegion() {\n        this.selectedVc = '';\n        this.selectedDc = '';\n        this.selectedBu = '';\n        this.selectedCluster = '';\n        this.selectedResourcePool = '';\n        this.selectedInterfaceType = '';\n        this.selectedInterface = '';\n        this.vcNameArray = [];\n        this.dcNameArray = [];\n        this.buNameArray = [];\n        this.clusterNameArray = [];\n        this.resourcePoolArray = [];\n        this.interfaceTypeArray = [];\n        this.interfaceArray = [];\n        this.regionData = null;\n        this.vcData = null;\n        this.dcData = null;\n        this.buData = null;\n        this.clusterData = null;\n    }\n\n    private resetForVC() {\n        this.selectedDc = '';\n        this.selectedBu = '';\n        this.selectedCluster = '';\n        this.selectedResourcePool = '';\n        this.selectedInterfaceType = '';\n        this.selectedInterface = '';\n        this.dcNameArray = [];\n        this.buNameArray = [];\n        this.clusterNameArray = [];\n        this.resourcePoolArray = [];\n        this.interfaceTypeArray = [];\n        this.interfaceArray = [];\n        this.vcData = null;\n        this.dcData = null;\n        this.buData = null;\n        this.clusterData = null;\n    }\n\n    private resetForDC() {\n        this.selectedBu = '';\n        this.selectedCluster = '';\n        this.selectedResourcePool = '';\n        this.selectedInterfaceType = '';\n        this.selectedInterface = '';\n        this.buNameArray = [];\n        this.clusterNameArray = [];\n        this.resourcePoolArray = [];\n        this.interfaceTypeArray = [];\n        this.interfaceArray = [];\n        this.dcData = null;\n        this.buData = null;\n        this.clusterData = null;\n    }\n\n    private resetForBU() {\n        this.selectedCluster = '';\n        this.selectedResourcePool = '';\n        this.selectedInterfaceType = '';\n        this.selectedInterface = '';\n        this.clusterNameArray = [];\n        this.resourcePoolArray = [];\n        this.interfaceTypeArray = [];\n        this.interfaceArray = [];\n        this.buData = null;\n        this.clusterData = null;\n    }\n\n    private resetForCluster() {\n        this.selectedResourcePool = '';\n        this.selectedInterfaceType = '';\n        this.selectedInterface = '';\n        this.resourcePoolArray = [];\n        this.interfaceTypeArray = [];\n        this.interfaceArray = [];\n        this.clusterData = null;\n    }\n\n    private resetForInterfaceType() {\n        this.selectedInterface = '';\n        this.interfaceArray = [];\n    }\n\n    private extractVcList() {\n        console.log(this.regionData);\n        if (this.regionData && this.regionData['vcenters']) {\n            this.vcNameArray = this.regionData['vcenters'];\n        }\n    }\n\n    private extractDcList() {\n        if (this.regionData) {\n            this.vcData = this.regionData[this.selectedVc];\n            if (this.vcData && this.vcData['datacenters']) {\n                this.dcNameArray = this.vcData['datacenters'];\n            }\n        }\n    }\n\n    private extractBuList() {\n        if (this.vcData) {\n            this.dcData = this.vcData[this.selectedDc];\n            if (this.dcData && this.dcData['business_units']) {\n                this.buNameArray = this.dcData['business_units'];\n            }\n        }\n    }\n\n    private extractClusterList() {\n        if (this.dcData) {\n            this.buData = this.dcData[this.selectedBu];\n            if (this.buData && this.buData['clusters']) {\n                this.clusterNameArray = this.buData['clusters'];\n            }\n        }\n    }\n\n    private extractResourcePoolAndInterfaceTypeList() {\n        if (this.buData) {\n            this.clusterData = this.buData[this.selectedCluster];\n            if (this.clusterData) {\n                this.resourcePoolArray = this.clusterData['resource_pools'] ? this.clusterData['resource_pools'] : [];\n                this.interfaceTypeArray = this.clusterData['nic_type'] ? this.clusterData['nic_type'] : [];\n            }\n        }\n    }\n\n    private extractInterfaceList() {\n        if (this.clusterData) {\n            this.interfaceTypeData = this.clusterData[this.selectedInterfaceType];\n            if (this.interfaceTypeData) {\n                this.interfaceArray = this.interfaceTypeData ? this.interfaceTypeData : [];\n            }\n        }\n    }\n\n    private clearIntervalReference() {\n        clearInterval(this.setIntervalReference);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/jgotta/training/redis-nodejs/one-touch-automation/angular-app/src/app/create-vm/create-vm.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { AlertModule } from 'ngx-bootstrap/alert';\nimport { ModalModule } from 'ngx-bootstrap/modal';\n\nimport { CreateVmComponent } from './create-vm.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        AlertModule.forRoot(),\n        ModalModule.forRoot()\n    ],\n    declarations: [\n        CreateVmComponent\n    ],\n    exports: [\n        CreateVmComponent\n    ]\n})\nexport class CreateVmModule {\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/jgotta/training/redis-nodejs/one-touch-automation/angular-app/src/app/create-vm/create-vm.module.ts","module.exports = \"<div class=\\\"container\\\">\\n  <alert type=\\\"success\\\" *ngIf=\\\"isVmDeleted\\\">\\n      <strong>VM is deleted successfully.</strong>\\n  </alert>\\n  <alert type=\\\"info\\\" *ngIf=\\\"isVmDeleting\\\">\\n      <strong>VM is being deleted.</strong>\\n  </alert>\\n  <alert type=\\\"danger\\\" *ngIf=\\\"isVmDeleteError\\\">\\n      <strong>Error in deleting VM.</strong>\\n  </alert>\\n  <div class=\\\"col-sm-6\\\">\\n      <form class=\\\"form-horizontal\\\" role=\\\"form\\\" #vmForm=\\\"ngForm\\\">\\n          <div class=\\\"form-group\\\">\\n              <label class=\\\"col-sm-4 control-label\\\">* VM Name\\n              </label>\\n              <div class=\\\"col-sm-8\\\">\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"VIRTUAL MACHINE NAME\\\" required *ngIf=\\\"!isPreview\\\" [(ngModel)]=\\\"machineName\\\"\\n                      name=\\\"name\\\" #name=\\\"ngModel\\\">\\n                  <div *ngIf=\\\"isPreview\\\">{{ machineName || '---' }}</div>\\n              </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n              <label class=\\\"col-sm-4 control-label\\\">* VC Name</label>\\n              <div class=\\\"col-sm-8\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"VIRTUAL CENTER NAME\\\" required *ngIf=\\\"!isPreview\\\" [(ngModel)]=\\\"vcName\\\"\\n                    name=\\\"vcNameInput\\\" #vcNameInput=\\\"ngModel\\\">\\n                <div *ngIf=\\\"isPreview\\\">{{ vcName || '---' }}</div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n              <label class=\\\"col-sm-4 control-label\\\">Email Address </label>\\n              <div class=\\\"col-sm-8\\\">\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"EMAIL\\\" [(ngModel)]=\\\"email\\\" *ngIf=\\\"!isPreview\\\" name=\\\"emailString\\\" #emailString=\\\"ngModel\\\">\\n                  <div *ngIf=\\\"isPreview\\\">\\n                    {{ userEmail }}\\n                    <span *ngIf=\\\"email !== ''\\\">\\n                        , {{ this.email }}\\n                    </span>\\n                </div>\\n                <div class=\\\"text-muted\\\" *ngIf=\\\"!isPreview\\\">User's email :- {{ userEmail }}</div>\\n              </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n              <div class=\\\"col-sm-offset-4 col-sm-8\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn btn-default\\\" *ngIf=\\\"! isPreview\\\" (click)=\\\"isPreview = true\\\" [disabled]=\\\"vmForm.invalid\\\">Next</button>\\n              </div>\\n              <div class=\\\"col-sm-offset-4 col-sm-8\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn btn-default\\\" *ngIf=\\\"isPreview && showSubmit\\\" (click)=\\\"onSubmit()\\\">Submit</button>\\n                  <button type=\\\"button\\\" class=\\\"btn btn-default\\\" style=\\\"margin-left: 10px\\\" *ngIf=\\\"isPreview && showSubmit\\\"\\n                      (click)=\\\"isPreview = false\\\">Back</button>\\n              </div>\\n          </div>\\n      </form>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/jgotta/training/redis-nodejs/one-touch-automation/angular-app/src/app/delete-vm/delete-vm.component.html\n// module id = ../../../../../src/app/delete-vm/delete-vm.component.html\n// module chunks = main","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".form-group div {\\n  margin-top: 4px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/jgotta/training/redis-nodejs/one-touch-automation/angular-app/src/app/delete-vm/delete-vm.component.scss\n// module id = ../../../../../src/app/delete-vm/delete-vm.component.scss\n// module chunks = main","import {\n  Component,\n  OnInit\n} from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport {\n  VmModel\n} from '../shared/model/app.models';\nimport {\n  AppService\n} from '../shared/app.service';\n\n@Component({\n  selector: 'app-delete-vm',\n  styleUrls: ['./delete-vm.component.scss'],\n  templateUrl: './delete-vm.component.html',\n})\nexport class DeleteVmComponent implements OnInit {\n  machineName = '';\n  vcName = '';\n  email = '';\n  userEmail = '';\n  isPreview = false;\n  isVmDeleting = false;\n  isVmDeleted = false;\n  isVmDeleteError = false;\n  showSubmit = true;\n  private deleteVmLaunchId: string;\n  private deleteVmJobId: string;\n  private setIntervalReference: any;\n\n  constructor(\n    private router: Router,\n    private service: AppService) { }\n\n  ngOnInit() {\n    if (this.service.loggedInUser && this.service.loggedInUser.username) {\n      this.userEmail = this.service.loggedInUser.username;\n    } else {\n      this.router.navigate(['login']);\n    }\n  }\n\n  onSubmit() {\n    this.showSubmit = false;\n    this.isVmDeleting = true;\n    this.isVmDeleted = false;\n    this.isVmDeleteError = false;\n    this.service.getDeleteVmLaunchId()\n      .subscribe((response) => {\n        if (response) {\n          const resJson = response.json();\n          const data = resJson['data'];\n          if (data) {\n            this.deleteVmLaunchId = data['id'];\n            this.deleteVm();\n          }\n        }\n      }, (error: Response) => {\n        console.log('error in fetch delete launch id', error.json());\n        this.isVmDeleted = false;\n        this.isVmDeleting = false;\n        this.isVmDeleteError = true;\n      });\n  }\n\n  deleteVm() {\n    let emails = '';\n    if (this.email) {\n      emails = this.userEmail + ',' + this.email;\n    } else {\n      emails = this.userEmail;\n    }\n    const vmToDelete: VmModel = {\n      vmname: this.machineName,\n      vc_name: this.vcName,\n      email_address: emails,\n    };\n    this.service.deleteVm(this.deleteVmLaunchId, vmToDelete)\n      .subscribe((response) => {\n        if (response) {\n          const resJson = response.json();\n          const data = resJson['data'];\n          if (data) {\n            this.deleteVmJobId = data['job'];\n            this.pollForJobStatus();\n          }\n        }\n        this.isVmDeleting = true;\n      }, (error: Response) => {\n        console.log('error in delete vm', error.json());\n        this.isVmDeleted = false;\n        this.isVmDeleting = false;\n        this.isVmDeleteError = true;\n      });\n  }\n\n  pollForJobStatus() {\n    // for now the interval is 10 sec\n    this.setIntervalReference = setInterval(this.getJobStatus.bind(this), 10000);\n  }\n\n  getJobStatus() {\n    this.service.getJobStatus(this.deleteVmJobId)\n      .subscribe((response) => {\n        if (response) {\n          const resJson = response.json();\n          const data = resJson['data'];\n          if (data) {\n            let status: string = data['status'];\n            if (status) {\n              status = status.toLowerCase();\n              if (status === 'successful') {\n                this.isVmDeleted = true;\n                this.isVmDeleting = false;\n                this.isVmDeleteError = false;\n                this.clearIntervalReference();\n              } else if (status === 'pending' || status === 'running') {\n                this.isVmDeleted = false;\n                this.isVmDeleting = true;\n                this.isVmDeleteError = false;\n              } else if (status === 'failed') {\n                this.isVmDeleted = false;\n                this.isVmDeleting = false;\n                this.isVmDeleteError = true;\n                this.clearIntervalReference();\n              }\n            }\n          }\n        }\n      }, (error: Response) => {\n        console.log('error in fetch job status for create vm', error.json());\n        this.isVmDeleting = false;\n        this.isVmDeleted = false;\n        this.isVmDeleteError = true;\n      });\n  }\n\n  private clearIntervalReference() {\n    clearInterval(this.setIntervalReference);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/jgotta/training/redis-nodejs/one-touch-automation/angular-app/src/app/delete-vm/delete-vm.component.ts","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AlertModule } from 'ngx-bootstrap/alert';\n\nimport { CommonModule } from '@angular/common';\nimport { DeleteVmComponent } from './delete-vm.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    AlertModule.forRoot(),\n  ],\n  declarations: [DeleteVmComponent],\n  exports: [DeleteVmComponent]\n})\nexport class DeleteVmModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/jgotta/training/redis-nodejs/one-touch-automation/angular-app/src/app/delete-vm/delete-vm.module.ts","module.exports = \"<header>\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n            <nav class=\\\"navbar navbar-default\\\" role=\\\"navigation\\\">\\n                <div class=\\\"container-fluid\\\">\\n                    <div class=\\\"navbar-header\\\">\\n                        <div class=\\\"navbar-brand\\\">\\n                            <a routerLink=\\\"/home\\\">\\n                                <h1>ONE-TOUCH-AUTOMATION</h1>\\n                            </a>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"menu\\\">\\n                        <ul class=\\\"nav nav-tabs\\\" role=\\\"tablist\\\">\\n                            <!--<li role=\\\"presentation\\\" routerLinkActive=\\\"active\\\">\\n                                <a routerLink=\\\"/home\\\">Home</a>\\n                            </li>-->\\n                            <li role=\\\"presentation\\\" routerLinkActive=\\\"active\\\">\\n                                <a routerLink=\\\"create-vm\\\">Create VM</a>\\n                            </li>\\n                            <li role=\\\"presentation\\\" routerLinkActive=\\\"active\\\">\\n                                <a routerLink=\\\"create-vc\\\">Create VC</a>\\n                            </li>\\n                            <li role=\\\"presentation\\\" routerLinkActive=\\\"active\\\">\\n                                <a routerLink=\\\"delete-vm\\\">Delete VM</a>\\n                            </li>\\n                            <li role=\\\"presentation\\\" *ngIf=\\\"loginObj?.isLoggedIn\\\">\\n                                <a routerLink=\\\"/login\\\" (click)=\\\"logout()\\\">Logout</a>\\n                            </li>\\n                        </ul>\\n                    </div>\\n                </div>\\n            </nav>\\n        </div>\\n    </div>\\n</header>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/jgotta/training/redis-nodejs/one-touch-automation/angular-app/src/app/header/header.component.html\n// module id = ../../../../../src/app/header/header.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { AppService } from '../shared/app.service';\nimport { LoginModel } from '../shared/model/app.models';\n\n@Component({\n    selector: 'app-header',\n    templateUrl: 'header.component.html'\n})\nexport class HeaderComponent implements OnInit {\n    loginObj: LoginModel;\n\n    constructor(private service: AppService) {}\n\n    ngOnInit() {\n        // this.service.loginEvent\n        // .subscribe((loginObj: LoginModel) => {\n        //     this.loginObj = loginObj;\n        // });\n        this.loginObj = this.service.loggedInUser;\n    }\n\n    logout() {\n        // this.service.loginEvent.next({\n        //     username: '', isLoggedIn: false\n        // });\n        this.service.loggedInUser.isLoggedIn = false;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/jgotta/training/redis-nodejs/one-touch-automation/angular-app/src/app/header/header.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { HeaderComponent } from './header.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule\n    ],\n    declarations: [\n        HeaderComponent\n    ],\n    exports: [\n        HeaderComponent\n    ]\n})\nexport class HeaderModule {\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/jgotta/training/redis-nodejs/one-touch-automation/angular-app/src/app/header/header.module.ts","module.exports = \"<app-header></app-header>\\n<router-outlet></router-outlet>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/jgotta/training/redis-nodejs/one-touch-automation/angular-app/src/app/home/home.component.html\n// module id = ../../../../../src/app/home/home.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-home',\n    templateUrl: 'home.component.html'\n})\nexport class HomeComponent {\n\n}\n\n\n// WEBPACK FOOTER //\n// /Users/jgotta/training/redis-nodejs/one-touch-automation/angular-app/src/app/home/home.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './home.component';\nimport { HeaderModule } from '../header/header.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        HeaderModule,\n        RouterModule\n    ],\n    declarations: [\n        HomeComponent\n    ],\n    exports: [\n        HomeComponent\n    ]\n})\nexport class HomeModule {\n\n}\n\n\n// WEBPACK FOOTER //\n// /Users/jgotta/training/redis-nodejs/one-touch-automation/angular-app/src/app/home/home.module.ts","module.exports = \"<carousel>\\n    <!--<slide>\\n        <img src=\\\"http://res.cloudinary.com/jyasveer/image/upload/v1520773135/img3.jpg\\\" alt=\\\"First slide\\\" style=\\\"display: block; width: 100%;\\\">\\n    </slide>-->\\n    <slide>\\n        <img src=\\\"http://res.cloudinary.com/jyasveer/image/upload/v1520773564/img.jpg\\\" alt=\\\"Second slide\\\" style=\\\"display: block; width: 100%;\\\">\\n    </slide>\\n</carousel>\\n<div class=\\\"container login\\\">\\n    <alert type=\\\"danger\\\" *ngIf=\\\"isCredentialsWrong\\\">\\n        <strong>Please enter correct credentials.</strong>\\n    </alert>\\n    <alert type=\\\"danger\\\" *ngIf=\\\"isLoginError\\\">\\n        <strong>Internal server error. Please try again.</strong>\\n    </alert>\\n    <div class=\\\"col-lg-6\\\">\\n        <div class=\\\"form-horizontal\\\" role=\\\"form\\\">\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"inputEmail3\\\" class=\\\"col-sm-2 control-label\\\">Email</label>\\n                <div class=\\\"col-sm-10\\\">\\n                    <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"inputEmail3\\\" placeholder=\\\"Email\\\" [(ngModel)]=\\\"username\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"inputPassword3\\\" class=\\\"col-sm-2 control-label\\\">Password</label>\\n                <div class=\\\"col-sm-10\\\">\\n                    <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"inputPassword3\\\" placeholder=\\\"Password\\\" [(ngModel)]=\\\"password\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <div class=\\\"col-sm-offset-2 col-sm-10\\\">\\n                    <div class=\\\"checkbox\\\">\\n                        <label>\\n                            <input type=\\\"checkbox\\\"> Remember me\\n                        </label>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <div class=\\\"col-sm-offset-2 col-sm-10\\\">\\n                    <button type=\\\"button\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-default\\\">Submit</button>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/jgotta/training/redis-nodejs/one-touch-automation/angular-app/src/app/login/login.component.html\n// module id = ../../../../../src/app/login/login.component.html\n// module chunks = main","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".login {\\n  position: absolute;\\n  top: 150px;\\n  left: 50px; }\\n  .login label {\\n    color: white; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/jgotta/training/redis-nodejs/one-touch-automation/angular-app/src/app/login/login.component.scss\n// module id = ../../../../../src/app/login/login.component.scss\n// module chunks = main","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AppService } from '../shared/app.service';\n\n@Component({\n    selector: 'app-login',\n    styleUrls: ['./login.component.scss'],\n    templateUrl: './login.component.html'\n})\nexport class LoginComponent {\n    username: string;\n    password: string;\n    isCredentialsWrong = false;\n    isLoginError = false;\n\n    constructor(private router: Router,\n        private service: AppService) {}\n\n    submit() {\n        this.service.authenticate(this.username, this.password)\n        .subscribe((response: Response) => {\n            const data = response.json()['data'];\n            if (data['key'] === 'login-success' || data['key'] === 'user-created') {\n                const user = {\n                    username: data['username'],\n                    isLoggedIn: true\n                };\n                this.service.loggedInUser = user;\n                this.router.navigate(['home/create-vm']);\n            } else {\n                const user = {\n                    username: data['username'],\n                    isLoggedIn: false\n                };\n                this.service.loggedInUser = user;\n                this.isCredentialsWrong = true;\n            }\n        }, (error: Response) => {\n            console.log(error.json());\n            this.isLoginError = true;\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/jgotta/training/redis-nodejs/one-touch-automation/angular-app/src/app/login/login.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { CarouselModule } from 'ngx-bootstrap/carousel';\nimport { AlertModule } from 'ngx-bootstrap/alert';\n\nimport { LoginComponent } from './login.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        CarouselModule.forRoot(),\n        AlertModule.forRoot()\n    ],\n    declarations: [\n        LoginComponent\n    ],\n    exports: [\n        LoginComponent\n    ]\n})\nexport class LoginModule {\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/jgotta/training/redis-nodejs/one-touch-automation/angular-app/src/app/login/login.module.ts","import {\n    Injectable\n} from '@angular/core';\nimport {\n    Http\n} from '@angular/http';\nimport {\n    Observable\n} from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\nimport { Subject } from 'rxjs/Subject';\nimport { LoginModel, VmModel } from './model/app.models';\n\n@Injectable()\nexport class AppService {\n    loggedInUser: LoginModel;\n    private host = 'http://bng-infra-automation.juniper.net:8082';\n    // private host = 'http://localhost:8082';\n\n    constructor(private http: Http) {}\n\n    authenticate(username, password): Observable < any > {\n        const loginObj = {\n            username: username,\n            password: password\n        };\n        return this.http.post( this.host + '/authenticate', loginObj);\n    }\n\n    getOsData() {\n        return this.http.get(this.host + '/data/os');\n    }\n\n    createVc(location, data): Observable < any > {\n        const obj = {\n            location,\n            data\n        };\n        return this.http.post( this.host + '/create-vc', obj);\n    }\n\n    getLocationData(location: string    ) {\n        return this.http.get(this.host + '/data/' + location);\n    }\n\n    getCreateVmLaunchId() {\n        return this.http.get(this.host + '/create-vm/id');\n    }\n\n    createVm(id: string, vm: VmModel) {\n        const vmString = JSON.stringify({extra_vars: vm});\n        const payload = {\n            id: id,\n            vm: vmString\n        };\n        return this.http.post(this.host + '/create-vm', payload);\n    }\n\n    getDeleteVmLaunchId() {\n        return this.http.get(this.host + '/delete-vm/id');\n    }\n\n    deleteVm(id: string, vm: VmModel) {\n        const vmString = JSON.stringify({extra_vars: vm});\n        const payload = {\n            id: id,\n            vm: vmString\n        };\n        return this.http.post(this.host + '/delete-vm', payload);\n    }\n\n    getJobStatus(jobId: string) {\n        return this.http.get(this.host + '/job/status/' + jobId);\n    }\n\n    private extractData(response: Response): any {\n        const body = response.json() || {};\n        body['statusCode'] = response.status;\n        body['statusText'] = response.statusText;\n        return body;\n    }\n\n    private handleError(error: Response | any) {\n        let body: any = {};\n        if (error instanceof Response) {\n            if (error && error.status && error.statusText) {\n                body = {\n                    status: error.status,\n                    statusText: error.statusText\n                };\n            }\n        } else {\n            body = {\n                statusText: error.message ? error.message : error.toString()\n            };\n        }\n        return Observable.throw(body);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/jgotta/training/redis-nodejs/one-touch-automation/angular-app/src/app/shared/app.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/jgotta/training/redis-nodejs/one-touch-automation/angular-app/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// /Users/jgotta/training/redis-nodejs/one-touch-automation/angular-app/src/main.ts"],"sourceRoot":"webpack:///"}